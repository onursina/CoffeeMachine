package machine

fun main() {
    val curCapacity = Capacity()
    curCapacity.menu()
}
class Capacity(var water: Int = 400, var milk: Int = 540, var beans: Int = 120, var cups: Int = 9, var money: Int = 550) {
    fun menu() {
        do {
            println("Write action (buy, fill, take, remaining, exit):")
            when(readLine()!!) {
                "buy" -> { 
                    println("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu:")
                    when (readLine()!!) {
                        "back" -> {}
                        "1", "espresso" -> { if(check(250, 0, 16)) buy(250, 0, 16, 4) }
                        "2", "latte" -> { if(check(350, 75, 20)) buy(350, 75, 20, 7) }
                        "3", "cappuccino" -> { if(check(200, 100, 12)) buy(200, 100, 12, 6) }
                        else -> println("Wrong order")
                    }
                }
                "fill" -> {
                    println("Write how many ml of water do you want to add:")
                    water += readLine()!!.toInt()
                    println("Write how many ml of milk do you want to add:")
                    milk += readLine()!!.toInt()
                    println("Write how many grams of coffee beans do you want to add:")
                    beans += readLine()!!.toInt()
                    println("Write how many disposable cups of coffee do you want to add:")
                    cups += readLine()!!.toInt()
                }
                "take" -> { println("I gave you $$money"); money = 0 }
                "remaining" -> inform()
                "exit" -> return
            }
        } while (true)
    }
    fun inform() {
        println("""
            The coffee machine has:
            $water of water 
            $milk of milk
            $beans of coffee beans
            $cups of disposable cups
            $money of money
            """.trimIndent())
    }
    fun check(neededWater: Int, neededMilk: Int, neededBeans: Int): Boolean {
        when {
            cups < 1 -> { println("Sorry, not enough cups!"); return false }
            water < neededWater -> { println("Sorry, not enough water!"); return false } 
            milk < neededMilk -> { println("Sorry, not enough milk!"); return false }
            beans < neededBeans -> { println("Sorry, not enough beans!"); return false }
            else -> { println("I have enough resources, making you a coffee!"); return true }
        }
    }
    fun buy(usedwater: Int, usedmilk: Int, usedbeans: Int, paidmoney: Int) {
        water -= usedwater; milk -= usedmilk; beans -= usedbeans; cups -= 1; money += paidmoney
    }
}
